Rendu : 

Pokedex

Yram / Tristan / Tom

Sommaire :
Intro : 
	Présentation
	Cahier des charges
	Membre du groupe

Conception :
	Outils utilisés
	Stratégie de developpement
	Problèmes attendus et rencontrés

	Evolutions du projet
	Performances du project
	Mise en production

Conclusion :
	Etat du projet
	Conclusions personnelles
	Prolongements
	Retour sur les choix faits
	Axes d'améliorations




Cahier des charges: 
Page Pokedex = Acceuil (le fondement du projet) :
	- Liste de tous les pokémons existants
	- Système de filtre et recherche
	- Détails disponibles pour chaques pokémons
	- Syncronisation avec un pokedex personnel (favoris / capture/ equipes)

Page Table des types :
	- Faiblesses et resistances par types
	- Possibilité de prendre en compte les doubles types

Page Cartes des différents jeux :
	- Interactivité (possibilité de voir les pokemons présentS dans une zone séléctionnée)

Page Joueur :
	- Information sur le joueur / compte
	- Liste d'amis
	- Possibilité de voir les pokemons favoris / capturés / mis dans uen équipe

Page Inscription

Page Items : 
	- Liste des différents items pouvant êtres trouvés dans le jeu

Page Attaque : 
	- Liste des attaques 
	- Système de recherche et de filtre
	- Détails des attaques

Page Forum



travail à partir de maquettes
creation bdd:
	php api ->sql
	pioche dans plusieurs api ? (oui)
	table ability (is hidden ?) -> table ability_pokemon -> (idPoke, idAbil, isHidden) -> pas caché sur tous les poké
	for loop though all but id non consecutive, so foreach thought a file with all subfiles listed
	api -> dowload api -> get data thought file instead of apicalls
	trop gros packet de donnée a envoyer, envoie un plusieurs packet de 200data
	différenttes verison php -> s'adapter a la plus ancienne
	functions réutilisable pour chaque type de valeurs

Database needs: 
	ability effect
	move effect
	Fr 

	